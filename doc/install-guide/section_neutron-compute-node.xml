<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="neutron-compute-node">
  <title>安装和配置计算节点</title>
  <para>The compute node handles connectivity and
    <glossterm baseform="security group">security groups</glossterm>
    for instances.</para>
  <procedure>
    <title>To configure prerequisites</title>
    <para>Before you install and configure OpenStack Networking, you
      must configure certain kernel networking parameters.</para>
    <step>
      <para>Edit the <filename>/etc/sysctl.conf</filename> file to
        contain the following parameters:</para>
      <programlisting>net.ipv4.conf.all.rp_filter=0
net.ipv4.conf.default.rp_filter=0</programlisting>
    </step>
    <step>
      <para>Implement the changes:</para>
      <screen><prompt>#</prompt> <userinput>sysctl -p</userinput></screen>
    </step>
  </procedure>
  <procedure os="ubuntu;rhel;centos;fedora;sles;opensuse">
    <title>To install the Networking components</title>
    <step>
      <screen os="ubuntu"><prompt>#</prompt> <userinput>apt-get install neutron-plugin-ml2 neutron-plugin-openvswitch-agent</userinput></screen>
      <screen os="rhel;centos;fedora"><prompt>#</prompt> <userinput>yum install openstack-neutron openstack-neutron-ml2 openstack-neutron-openvswitch</userinput></screen>
      <screen os="sles;opensuse"><prompt>#</prompt> <userinput>zypper install --no-recommends openstack-neutron-openvswitch-agent ipset</userinput></screen>
      <note os="sles;opensuse">
        <para>SUSE does not use a separate ML2 plug-in package.</para>
      </note>
    </step>
  </procedure>
  <procedure os="debian">
    <title>To install and configure the Networking components</title>
    <step>
      <screen><prompt>#</prompt> <userinput>apt-get install neutron-plugin-openvswitch-agent openvswitch-datapath-dkms</userinput></screen>
      <note>
        <para>Debian does not use a separate ML2 plug-in package.</para>
      </note>
    </step>
    <step>
      <para>Respond to prompts for <link
          linkend="debconf-dbconfig-common">database
        management</link>, <link linkend="debconf-keystone_authtoken"
          >Identity service credentials</link>, <link
          linkend="debconf-api-endpoints">service endpoint
          registration</link>, and <link linkend="debconf-rabbitmq"
          >message queue credentials</link>.</para>
    </step>
    <step>
       <para>Select the ML2 plug-in:</para>
       <informalfigure>
        <mediaobject>
          <imageobject>
            <imagedata scale="50"
              fileref="figures/debconf-screenshots/neutron_1_plugin_selection.png"
            />
          </imageobject>
        </mediaobject>
      </informalfigure>
      <note>
        <para>Selecting the ML2 plug-in also populates the
          <option>service_plugins</option> and
          <option>allow_overlapping_ips</option> options in the
          <filename>/etc/neutron/neutron.conf</filename> file with the
          appropriate values.</para>
      </note>
    </step>
  </procedure>
  <procedure os="ubuntu;rhel;centos;fedora;sles;opensuse">
    <title>To configure the Networking common components</title>
    <para>The Networking common component configuration includes the
      authentication mechanism, message queue, and plug-in.</para>
    <note>
       <para>Default configuration files vary by distribution. You might need
         to add these sections and options rather than modifying existing
         sections and options. Also, an ellipsis (...) in the configuration
         snippets indicates potential default configuration options that you
         should retain.</para>
    </note>
    <step>
      <para>Edit the <filename>/etc/neutron/neutron.conf</filename> file
        and complete the following actions:</para>
      <substeps>
        <step>
          <para>In the <literal>[database]</literal> section, comment out
            any <literal>connection</literal> options because compute nodes
            do not directly access the database.</para>
        </step>
        <step>
         <para>In the <literal>[DEFAULT]</literal> and
            <literal>[oslo_messaging_rabbit]</literal> sections, configure
            <application>RabbitMQ</application> message queue access:</para>
          <programlisting language="ini">[DEFAULT]
...
rpc_backend = rabbit

[oslo_messaging_rabbit]
...
rabbit_host = <replaceable>controller</replaceable>
rabbit_userid = openstack
rabbit_password = <replaceable>RABBIT_PASS</replaceable></programlisting>
          <para>Replace <replaceable>RABBIT_PASS</replaceable> with the
            password you chose for the <literal>openstack</literal> account in
            <application>RabbitMQ</application>.</para>
        </step>
        <step>
          <para>In the <literal>[DEFAULT]</literal> and
            <literal>[keystone_authtoken]</literal> sections,
            configure Identity service access:</para>
          <programlisting language="ini">[DEFAULT]
...
auth_strategy = keystone

[keystone_authtoken]
...
auth_uri = http://<replaceable>controller</replaceable>:5000
auth_url = http://<replaceable>controller</replaceable>:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
username = neutron
password = <replaceable>NEUTRON_PASS</replaceable></programlisting>
          <para>Replace <replaceable>NEUTRON_PASS</replaceable> with the
            password you chose or the <literal>neutron</literal> user in the
            Identity service.</para>
          <note>
            <para>Comment out or remove any other options in the
              <literal>[keystone_authtoken]</literal> section.</para>
          </note>
        </step>
        <step>
          <para>In the <literal>[DEFAULT]</literal> section, enable the
            Modular Layer 2 (ML2) plug-in, router service, and overlapping
            IP addresses:</para>
          <programlisting language="ini">[DEFAULT]
...
core_plugin = ml2
service_plugins = router
allow_overlapping_ips = True</programlisting>
        </step>
        <step>
          <para>(Optional) To assist with troubleshooting,
            enable verbose logging in the <literal>[DEFAULT]</literal>
            section:</para>
          <programlisting language="ini">[DEFAULT]
...
verbose = True</programlisting>
        </step>
      </substeps>
    </step>
  </procedure>
  <procedure>
    <title>To configure the Modular Layer 2 (ML2) plug-in</title>
    <para>The ML2 plug-in uses the Open vSwitch (OVS) mechanism (agent) to
      build the virtual networking framework for instances.</para>
    <step>
      <para>Edit the
        <filename>/etc/neutron/plugins/ml2/ml2_conf.ini</filename>
        file and complete the following actions:</para>
      <substeps>
        <step os="ubuntu;rhel;centos;fedora;sles;opensuse">
          <para>In the <literal>[ml2]</literal> section, enable the
            <glossterm baseform="flat network">flat</glossterm>,
            <glossterm baseform="VLAN network">VLAN</glossterm>,
            <glossterm>generic routing encapsulation (GRE)</glossterm>, and
            <glossterm>virtual extensible LAN (VXLAN)</glossterm>
            network type drivers, GRE tenant networks, and the OVS
            mechanism driver:</para>
          <programlisting language="ini">[ml2]
...
type_drivers = flat,vlan,gre,vxlan
tenant_network_types = gre
mechanism_drivers = openvswitch</programlisting>
        </step>
        <step os="ubuntu;rhel;centos;fedora;sles;opensuse">
          <para>In the <literal>[ml2_type_gre]</literal> section, configure
            the tunnel identifier (id) range:</para>
          <programlisting language="ini">[ml2_type_gre]
...
tunnel_id_ranges = 1:1000</programlisting>
        </step>
        <step os="ubuntu;rhel;centos;fedora;sles;opensuse">
          <para>In the <literal>[securitygroup]</literal> section, enable
            security groups, enable <glossterm>ipset</glossterm>, and
            configure the OVS <glossterm>iptables</glossterm> firewall
            driver:</para>
          <programlisting language="ini">[securitygroup]
...
enable_security_group = True
enable_ipset = True
firewall_driver = neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver</programlisting>
        </step>
       <step>
          <para>In the <literal>[ovs]</literal> section, enable tunnels
            and configure the local tunnel endpoint:</para>
          <programlisting language="ini">[ovs]
...
local_ip = <replaceable>INSTANCE_TUNNELS_INTERFACE_IP_ADDRESS</replaceable></programlisting>
          <para>Replace
            <replaceable>INSTANCE_TUNNELS_INTERFACE_IP_ADDRESS</replaceable>
            with the IP address of the instance tunnels network interface
            on your compute node.</para>
        </step>
        <step>
          <para>In the <literal>[agent]</literal> section, enable GRE
            tunnels:</para>
          <programlisting language="ini">[agent]
...
tunnel_types = gre</programlisting>
        </step>
      </substeps>
    </step>
  </procedure>
  <procedure>
    <title>To configure the Open vSwitch (OVS) service</title>
    <para>The OVS service provides the underlying virtual networking framework
      for instances.</para>
    <step os="rhel;centos;fedora;sles;opensuse">
      <para>Start the OVS service and configure it to start when the
        system boots:</para>
      <screen><prompt>#</prompt> <userinput>systemctl enable openvswitch.service</userinput>
<prompt>#</prompt> <userinput>systemctl start openvswitch.service</userinput></screen>
    </step>
    <step os="debian;ubuntu">
      <para>Restart the OVS service:</para>
      <screen><prompt>#</prompt> <userinput>service openvswitch-switch restart</userinput></screen>
    </step>
  </procedure>
  <procedure>
    <title>To configure Compute to use Networking</title>
    <para>By default, distribution packages configure Compute to use
      legacy networking. You must reconfigure Compute to manage
      networks through Networking.</para>
    <step>
      <para>Edit the <filename>/etc/nova/nova.conf</filename> file and
        complete the following actions:</para>
      <substeps>
        <step os="ubuntu;rhel;centos;fedora;sles;opensuse">
          <para>In the <literal>[DEFAULT]</literal> section, configure
            the <glossterm baseform="API">APIs</glossterm> and drivers:</para>
          <programlisting language="ini">[DEFAULT]
...
network_api_class = nova.network.neutronv2.api.API
security_group_api = neutron
linuxnet_interface_driver = nova.network.linux_net.LinuxOVSInterfaceDriver
firewall_driver = nova.virt.firewall.NoopFirewallDriver</programlisting>
          <note>
            <para>By default, Compute uses an internal firewall service.
              Since Networking includes a firewall service, you must
              disable the Compute firewall service by using the
              <literal>nova.virt.firewall.NoopFirewallDriver</literal>
              firewall driver.</para>
          </note>
        </step>
        <step>
          <para>In the <literal>[neutron]</literal> section, configure
            access parameters:</para>
          <programlisting language="ini">[neutron]
...
url = http://<replaceable>controller</replaceable>:9696
auth_strategy = keystone
admin_auth_url = http://<replaceable>controller</replaceable>:35357/v2.0
admin_tenant_name = service
admin_username = neutron
admin_password = <replaceable>NEUTRON_PASS</replaceable></programlisting>
          <para>Replace <replaceable>NEUTRON_PASS</replaceable> with the
            password you chose for the <literal>neutron</literal> user
            in the Identity service.</para>
        </step>
      </substeps>
    </step>
  </procedure>
  <procedure>
    <title>To finalize the installation</title>
    <step os="rhel;centos;fedora">
      <para>The Networking service initialization scripts expect a
        symbolic link <filename>/etc/neutron/plugin.ini</filename>
        pointing to the ML2 plug-in configuration file,
        <filename>/etc/neutron/plugins/ml2/ml2_conf.ini</filename>.
        If this symbolic link does not exist, create it using the
        following command:</para>
      <screen><prompt>#</prompt> <userinput>ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini</userinput></screen>
      <para>Due to a packaging bug, the Open vSwitch agent initialization
        script explicitly looks for the Open vSwitch plug-in configuration
        file rather than a symbolic link
        <filename>/etc/neutron/plugin.ini</filename> pointing to the ML2
        plug-in configuration file. Run the following commands to resolve this
        issue:</para>
      <screen><prompt>#</prompt> <userinput>cp /usr/lib/systemd/system/neutron-openvswitch-agent.service \
  /usr/lib/systemd/system/neutron-openvswitch-agent.service.orig</userinput>
<prompt>#</prompt> <userinput>sed -i 's,plugins/openvswitch/ovs_neutron_plugin.ini,plugin.ini,g' \
  /usr/lib/systemd/system/neutron-openvswitch-agent.service</userinput></screen>
    </step>
    <step os="sles;opensuse">
      <para>The Networking service initialization scripts expect the
        variable <literal>NEUTRON_PLUGIN_CONF</literal> in the
        <filename>/etc/sysconfig/neutron</filename> file to
        reference the ML2 plug-in configuration file. Edit the
        <filename>/etc/sysconfig/neutron</filename> file and add the
        following:</para>
      <programlisting>NEUTRON_PLUGIN_CONF="/etc/neutron/plugins/ml2/ml2_conf.ini"</programlisting>
    </step>
    <step>
      <para>Restart the Compute service:</para>
      <screen os="rhel;centos;fedora;opensuse;sles"><prompt>#</prompt> <userinput>systemctl restart openstack-nova-compute.service</userinput></screen>
      <screen os="ubuntu;debian"><prompt>#</prompt> <userinput>service nova-compute restart</userinput></screen>
    </step>
    <step os="rhel;centos;fedora;sles;opensuse">
      <para>Start the Open vSwitch (OVS) agent and configure it to
        start when the system boots:</para>
      <screen><prompt>#</prompt> <userinput>systemctl enable neutron-openvswitch-agent.service</userinput>
<prompt>#</prompt> <userinput>systemctl start neutron-openvswitch-agent.service</userinput></screen>
    </step>
    <step os="ubuntu;debian">
      <para>Restart the Open vSwitch (OVS) agent:</para>
      <screen><prompt>#</prompt> <userinput>service neutron-plugin-openvswitch-agent restart</userinput></screen>
    </step>
  </procedure>
  <procedure>
    <title>Verify operation</title>
    <note>
      <para>Perform these commands on the controller node.</para>
    </note>
    <step>
      <para>Source the <literal>admin</literal> credentials to gain access to
        admin-only CLI commands:</para>
      <screen><prompt>$</prompt> <userinput>source admin-openrc.sh</userinput></screen>
    </step>
    <step>
      <para>List agents to verify successful launch of the
        neutron agents:</para>
      <screen><prompt>$</prompt> <userinput>neutron agent-list</userinput>
<computeroutput>+--------------------------------------+--------------------+----------+-------+----------------+---------------------------+
| id                                   | agent_type         | host     | alive | admin_state_up | binary                    |
+--------------------------------------+--------------------+----------+-------+----------------+---------------------------+
| 30275801-e17a-41e4-8f53-9db63544f689 | Metadata agent     | network  | :-)   | True           | neutron-metadata-agent    |
| 4bd8c50e-7bad-4f3b-955d-67658a491a15 | Open vSwitch agent | network  | :-)   | True           | neutron-openvswitch-agent |
| 756e5bba-b70f-4715-b80e-e37f59803d20 | L3 agent           | network  | :-)   | True           | neutron-l3-agent          |
| 9c45473c-6d6d-4f94-8df1-ebd0b6838d5f | DHCP agent         | network  | :-)   | True           | neutron-dhcp-agent        |
| a5a49051-05eb-4b4f-bfc7-d36235fe9131 | Open vSwitch agent | compute1 | :-)   | True           | neutron-openvswitch-agent |
+--------------------------------------+--------------------+----------+-------+----------------+---------------------------+</computeroutput></screen>
      <note>
        <para>This output should indicate four agents alive on the
          network node and one agent alive on the compute node.</para>
      </note>
    </step>
  </procedure>
</section>
