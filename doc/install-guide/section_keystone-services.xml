<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="keystone-services">
  <title>创建服务实体和API端点</title>
  <para>身份服务提供了一个服务和服务所在位置的目录。你向OpenStack环境中所添加的每一项服务需要在此目录注册
 一个 <glossterm>service</glossterm> 实体和几个
    <glossterm>API endpoint</glossterm> 。</para>
  <procedure>
    <title>前提条件</title>
      <para>默认情况下，身份服务数据库没有包含信息来支持传统的身份认证和目录服务。你必须使用在
        <xref linkend="keystone-install"/> 中创建的一个临时的认证令牌来为身份服务初始化服务实体和API端点。</para>
      <para>你必须使用
        <parameter>--os-token</parameter> 参数或设定
        <envar>OS_TOKEN</envar> 环境变量向
        <command>openstack</command>命令传递认证令牌的值. 相似的，你必须同时使用
        <parameter>--os-url</parameter> 参数或设定<envar>OS_URL</envar> 环境变量向
 <command>openstack</command> 命令传递身份服务URL。以下指南使用环境变量来减少命令长度。</para>
      <warning>
        <para>出于安全考虑，请勿过长使用临时的认证令牌。</para>
      </warning>
    <step>
      <para>配置认证令牌：</para>
      <screen><prompt>$</prompt> <userinput>export OS_TOKEN=<replaceable>ADMIN_TOKEN</replaceable></userinput></screen>
      <para>用你在<xref linkend="keystone-install"/>中生成的认证令牌替换<replaceable>ADMIN_TOKEN</replaceable> 
         举例来说：</para>
      <screen><prompt>$</prompt> <userinput>export OS_TOKEN=294a4c8a8a475f9b9836</userinput></screen>
    </step>
    <step>
      <para>配置端点URL：</para>
      <screen><prompt>$</prompt> <userinput>export OS_URL=http://<replaceable>controller</replaceable>:35357/v2.0</userinput></screen>
    </step>
  </procedure>
  <procedure>
    <title>创建服务实体和API端点</title>
    <note os="debian">
      <para>该安装包可以自动创建服务实体和API端点。</para>
    </note>
    <step>
      <para>身份服务管理你OpenStack环境中的服务目录。服务使用这个目录来决定你的环境中的其他服务的可用性。</para>
      <para>为身份服务创建服务实体：</para>
      <screen><prompt>$</prompt> <userinput>openstack service create --type identity \
  --description "OpenStack Identity" keystone</userinput>
<computeroutput>+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | OpenStack Identity               |
| enabled     | True                             |
| id          | 4ddaae90388b4ebc9d252ec2252d8d10 |
| name        | keystone                         |
| type        | identity                         |
+-------------+----------------------------------+</computeroutput></screen>
      <note>
        <para>OpenStack动态地生成ID，所以你会在样例命令输出中看到不同的值。</para>
      </note>
    </step>
    <step>
      <para>身份服务管理一个和你OpenStack环境中的服务相关API端口的目录。服务可以使用这个目录来决定如何和你环境中的其他服务通信。
        </para>
      <para>各个服务,OpenStack使用三个API端点变体：
        admin, internal, and public. admin API端点允许修改默认用户和租户，而public和internal APIs并不能这么做。
Public API 端点可能可以从云之外连接，当internal API被连接到每个主机上时，admin API 网络可能会被保护。
另外，OpenStack 支持多个区域. 简单起见,这个指南为所有端点变体使用管理网络，并使用默认 <literal>RegionOne</literal>
区域。</para>
      <para>创建身份服务API端点：</para>
      <screen><prompt>$</prompt> <userinput>openstack endpoint create \
  --publicurl http://<replaceable>controller</replaceable>:5000/v2.0 \
  --internalurl http://<replaceable>controller</replaceable>:5000/v2.0 \
  --adminurl http://<replaceable>controller</replaceable>:35357/v2.0 \
  --region RegionOne \
  identity</userinput>
<computeroutput>+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| adminurl     | http://controller:35357/v2.0     |
| id           | 4a9ffc04b8eb4848a49625a3df0170e5 |
| internalurl  | http://controller:5000/v2.0      |
| publicurl    | http://controller:5000/v2.0      |
| region       | RegionOne                        |
| service_id   | 4ddaae90388b4ebc9d252ec2252d8d10 |
| service_name | keystone                         |
| service_type | identity                         |
+--------------+----------------------------------+</computeroutput></screen>
    </step>
  </procedure>
</section>
