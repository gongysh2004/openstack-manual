<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter [
<!ENTITY % openstack SYSTEM "../common/entities/openstack.ent">
%openstack;
]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="ceilometer-controller-install">
  <title>安装和配置控制节点</title>
  <para>本章介绍如何安装和配置Telemetry模块。Telemetry模块用独立的收集器来从OpenStack服务环境中收集测量数据。</para>
  <procedure os="ubuntu;rhel;centos;fedora;sles;opensuse">
    <title>配置预选项</title>
    <para>在安装和配置Telemetry之前, 你必须安装：
      <application>MongoDB</application>，创建MongoDB数据库，服务证书，和API端点。</para>
    <step os="opensuse;sles">
      <para>基于你的openSUSE 或 SLES版本，启动 MongoDB的Open Build Service 库:</para>
      <para>在openSUSE上:</para>
      <screen>
        <prompt>#</prompt>
        <userinput>zypper addrepo -f obs://server:database/openSUSE_13.2 Database</userinput>
      </screen>
      <para>在SLES上:</para>
      <screen>
        <prompt>#</prompt>
        <userinput>zypper addrepo -f obs://server:database/SLE_12 Database</userinput>
      </screen>
      <note>
        <para>这个包是被用GPG key签名
          <literal>562111AC05905EA8</literal>。你在应用之前要验证导入的GPG key的指纹。</para>
        <programlisting>Key Name: server:database OBS Project &lt;server:database@build.opensuse.org&gt;
Key Fingerprint: 116EB86331583E47E63CDF4D562111AC05905EA8
Key Created: Thu Oct 11 20:08:39 2012
Key Expires: Sat Dec 20 20:08:39 2014</programlisting>
      </note>
    </step>
    <step>
      <para>安装MongoDB包:</para>
      <screen os="rhel;centos;fedora">
        <prompt>#</prompt>
        <userinput>yum install mongodb-server mongodb</userinput>
      </screen>
      <screen os="opensuse;sles">
        <prompt>#</prompt>
        <userinput>zypper install mongodb</userinput>
      </screen>
      <screen os="ubuntu">
        <prompt>#</prompt>
        <userinput>apt-get install mongodb-server mongodb-clients python-pymongo</userinput>
      </screen>
    </step>
    <step>
      <para>编辑<filename os="opensuse;sles;ubuntu">/etc/mongodb.conf</filename><filename os="rhel;centos;fedora">/etc/mongod.conf</filename>
      文件，并完成以下动作：</para>
      <substeps>
        <step>
          <para>配置<literal>bind_ip</literal> key来使用控制节点管理接口的IP地址。</para>
          <programlisting language="ini">bind_ip = 10.0.0.11</programlisting>
        </step>
        <step>
          <para>缺省情况下，MongoDB创建几个1GB journal文件在<filename>/var/lib/mongodb/journal</filename>目录中。
           如果你想压缩journal文件的大小到128MB并且限制journal空间不超过512MB，可以插入：</para>
          <programlisting language="ini">smallfiles = true</programlisting>
          <para os="ubuntu">如果你改变journaling配置，停止MongoDB服务，移除初始的journal文件，再启动服务：</para>
          <screen os="ubuntu">
            <prompt>#</prompt>
            <userinput>service mongodb stop</userinput>
            <prompt>#</prompt>
            <userinput>rm /var/lib/mongodb/journal/prealloc.*</userinput>
            <prompt>#</prompt>
            <userinput>service mongodb start</userinput>
          </screen>
          <para>你还可以关闭journaling。更多信息可以看： <link xlink:href="http://docs.mongodb.org/manual/">MongoDB manual</link>。</para>
        </step>
        <step os="ubuntu">
          <para>重新启动MongoDB服务:</para>
          <screen>
            <prompt>#</prompt>
            <userinput>service mongodb restart</userinput>
          </screen>
        </step>
        <step os="centos;fedora;opensuse;rhel;sles">
          <para>启动MongoDB服务并配置为自动随系统启动：</para>
          <screen os="opensuse;sles">
            <prompt>#</prompt>
            <userinput>systemctl enable mongodb.service</userinput>
            <prompt>#</prompt>
            <userinput>systemctl start mongodb.service</userinput>
          </screen>
          <!-- (Note)below is mongod, not mongodb. -->
          <screen os="centos;fedora;rhel">
            <prompt>#</prompt>
            <userinput>systemctl enable mongod.service</userinput>
            <prompt>#</prompt>
            <userinput>systemctl start mongod.service</userinput>
          </screen>
        </step>
      </substeps>
    </step>
    <step>
      <para>创建<literal>ceilometer</literal>数据库:</para>
      <screen os="centos;fedora;rhel">
        <prompt>#</prompt>
        <userinput>mongo --host <replaceable>controller</replaceable> --eval '
  db = db.getSiblingDB("ceilometer");
  db.createUser({user: "ceilometer",
  pwd: "<replaceable>CEILOMETER_DBPASS</replaceable>",
  roles: [ "readWrite", "dbAdmin" ]})'</userinput>
        <computeroutput>MongoDB shell version: 2.6.x
connecting to: controller:27017/test
Successfully added user: { "user" : "ceilometer", "roles" : [ "readWrite", "dbAdmin" ] }</computeroutput>
      </screen>
      <screen os="ubuntu;opensuse;sles">
        <prompt>#</prompt>
        <userinput>mongo --host <replaceable>controller</replaceable> --eval '
  db = db.getSiblingDB("ceilometer");
  db.addUser({user: "ceilometer",
  pwd: "<replaceable>CEILOMETER_DBPASS</replaceable>",
  roles: [ "readWrite", "dbAdmin" ]})'</userinput>
        <computeroutput>MongoDB shell version: 2.4.x
connecting to: controller:27017/test
{
 "user" : "ceilometer",
 "pwd" : "72f25aeee7ad4be52437d7cd3fc60f6f",
 "roles" : [
  "readWrite",
  "dbAdmin"
 ],
 "_id" : ObjectId("5489c22270d7fad1ba631dc3")
}</computeroutput>
      </screen>
      <para>修改<replaceable>CEILOMETER_DBPASS</replaceable>为一个更合适的密码。</para>
    </step>
    <step>
      <para>切换到 <literal>admin</literal>环境：</para>
      <screen>
        <prompt>$</prompt>
        <userinput>source admin-openrc.sh</userinput>
      </screen>
    </step>
    <step>
      <para>为了创建服务证书，完成以下步骤：</para>
      <substeps>
        <step>
          <para>创建<literal>ceilometer</literal> 用户：</para>
          <screen>
            <prompt>$</prompt>
            <userinput>openstack user create --password-prompt ceilometer</userinput>
            <computeroutput>User Password:
Repeat User Password:
+----------+----------------------------------+
| Field    | Value                            |
+----------+----------------------------------+
| email    | None                             |
| enabled  | True                             |
| id       | b7657c9ea07a4556aef5d34cf70713a3 |
| name     | ceilometer                       |
| username | ceilometer                       |
+----------+----------------------------------+</computeroutput>
          </screen>
        </step>
        <step>
          <para>增加 <literal>admin</literal>角色到<literal>ceilometer</literal>用户。</para>
          <screen>
            <prompt>$</prompt>
            <userinput>openstack role add --project service --user ceilometer admin</userinput>
            <computeroutput>+-------+----------------------------------+
| Field | Value                            |
+-------+----------------------------------+
| id    | cd2cb9a39e874ea69e5d4b896eb16128 |
| name  | admin                            |
+-------+----------------------------------+</computeroutput>
          </screen>
        </step>
        <step>
          <para>创建<literal>ceilometer</literal>服务实体：</para>
          <screen>
            <prompt>$</prompt>
            <userinput>openstack service create --type metering \
  --description "Telemetry" ceilometer</userinput>
            <computeroutput>+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | Telemetry                        |
| enabled     | True                             |
| id          | 3405453b14da441ebb258edfeba96d83 |
| name        | ceilometer                       |
| type        | metering                         |
+-------------+----------------------------------+</computeroutput>
          </screen>
        </step>
      </substeps>
    </step>
    <step>
      <para>创建Telemetry组件的API端点：</para>
      <screen>
        <prompt>$</prompt>
        <userinput>openstack endpoint create \
  --publicurl http://<replaceable>controller</replaceable>:8777 \
  --internalurl http://<replaceable>controller</replaceable>:8777 \
  --adminurl http://<replaceable>controller</replaceable>:8777 \
  --region RegionOne \
  metering</userinput>
        <computeroutput>+--------------+----------------------------------+
| Field        | Value                            |
+--------------+----------------------------------+
| adminurl     | http://controller:8777           |
| id           | d3716d85b10d4e60a67a52c6af0068cd |
| internalurl  | http://controller:8777           |
| publicurl    | http://controller:8777           |
| region       | RegionOne                        |
| service_id   | 3405453b14da441ebb258edfeba96d83 |
| service_name | ceilometer                       |
| service_type | metering                         |
+--------------+----------------------------------+</computeroutput>
      </screen>
    </step>
  </procedure>
  <procedure os="debian">
    <title>To configure prerequisites</title>
    <para>在安装和配置Telemetry之前,必须安装
      <application>MongoDB</application>.</para>
    <step>
      <para>Install the MongoDB package:</para>
      <screen>
        <prompt>#</prompt>
        <userinput>apt-get install mongodb-server</userinput>
      </screen>
    </step>
    <step>
      <para>编辑<filename>/etc/mongodb.conf</filename>文件并完成下列步骤：</para>
      <substeps>
        <step>
          <para>配置<literal>bind_ip</literal> key来使用控制节点的管理接口IP地址。</para>
          <programlisting language="ini">bind_ip = 10.0.0.11</programlisting>
        </step>
        <step>
          <para>缺省情况下，MongoDB创建多个1GB journal文件在<filename>/var/lib/mongodb/journal</filename>目录. 如果你要压缩journal文件的大小到128MB并且限制总空间不超过512MB, 插入<literal>smallfiles</literal> key：</para>
          <programlisting language="ini">smallfiles = true</programlisting>
          <para>如果要改变journaling配置，停止MongoDB服务，删除初始的journal文件，再启动服务：</para>
          <screen>
            <prompt>#</prompt>
            <userinput>service mongodb stop</userinput>
            <prompt>#</prompt>
            <userinput>rm /var/lib/mongodb/journal/prealloc.*</userinput>
            <prompt>#</prompt>
            <userinput>service mongodb start</userinput>
          </screen>
          <para>还可以关闭journaling。更多信息请参考<link xlink:href="http://docs.mongodb.org/manual/">MongoDB manual</link>。 </para>
        </step>
        <step>
          <para>Restart the MongoDB service:</para>
          <screen>
            <prompt>#</prompt>
            <userinput>service mongodb restart</userinput>
          </screen>
        </step>
      </substeps>
    </step>
  </procedure>
  <procedure os="ubuntu;rhel;centos;fedora;sles;opensuse">
    <title>安装和配置Telemetry组件模块</title>
    <step>
      <para>安装软件包：</para>
      <screen os="ubuntu">
        <prompt>#</prompt>
        <userinput>apt-get install ceilometer-api ceilometer-collector ceilometer-agent-central \
  ceilometer-agent-notification ceilometer-alarm-evaluator ceilometer-alarm-notifier \
  python-ceilometerclient</userinput>
      </screen>
      <screen os="centos;fedora;rhel">
        <prompt>#</prompt>
        <userinput>yum install openstack-ceilometer-api openstack-ceilometer-collector \
  openstack-ceilometer-notification openstack-ceilometer-central openstack-ceilometer-alarm \
  python-ceilometerclient</userinput>
      </screen>
      <screen os="opensuse;sles">
        <prompt>#</prompt>
        <userinput>zypper install openstack-ceilometer-api openstack-ceilometer-collector \
  openstack-ceilometer-agent-notification openstack-ceilometer-agent-central python-ceilometerclient \
  openstack-ceilometer-alarm-evaluator openstack-ceilometer-alarm-notifier</userinput>
      </screen>
    </step>
    <step>
      <para>生成telemetry用户随机密码:</para>
      <screen>
        <prompt>$</prompt>
        <userinput>openssl rand -hex 10</userinput>
      </screen>
    </step>
    <step>
      <para>编辑<filename>/etc/ceilometer/ceilometer.conf</filename>文件并且完成下列步骤：</para>
      <substeps>
        <step>
          <para>在<literal>[database]</literal>部分，配置数据库访问：</para>
          <programlisting language="ini">[database]
...
connection = mongodb://ceilometer:<replaceable>CEILOMETER_DBPASS</replaceable>@<replaceable>controller</replaceable>:27017/ceilometer</programlisting>
          <para>修改<replaceable>CEILOMETER_DBPASS</replaceable>，用你选择的Telemetry数据库密码.你要避免在连接字符串中使用RFC2396规定的特殊字符如 ':', '/', '+', and '@' 。</para>
        </step>
        <step>
          <para>在 <literal>[DEFAULT]</literal> 和
            <literal>[oslo_messaging_rabbit]</literal>部分, 配置
            <application>RabbitMQ</application> 消息队列访问：</para>
          <programlisting language="ini">[DEFAULT]
...
rpc_backend = rabbit

[oslo_messaging_rabbit]
...
rabbit_host = <replaceable>controller</replaceable>
rabbit_userid = openstack
rabbit_password = <replaceable>RABBIT_PASS</replaceable></programlisting>
          <para>用你的<literal>openstack</literal> 用户在<application>RabbitMQ</application>中的密码替换<replaceable>RABBIT_PASS</replaceable>密码。</para>
        </step>
        <step>
          <para>在<literal>[DEFAULT]</literal>和
            <literal>[keystone_authtoken]</literal>部分, 配置身份服务访问信息:</para>
          <programlisting language="ini">[DEFAULT]
...
auth_strategy = keystone

[keystone_authtoken]
...
auth_uri = http://<replaceable>controller</replaceable>:5000/v2.0
identity_uri = http://<replaceable>controller</replaceable>:35357
admin_tenant_name = service
admin_user = ceilometer
admin_password = <replaceable>CEILOMETER_PASS</replaceable></programlisting>
          <para>用你的在Identity服务中<literal>celiometer</literal>用户的密码替换 <replaceable>CEILOMETER_PASS</replaceable>密码。</para>
          <note>
            <para>注释掉 <literal>auth_host</literal>,
              <literal>auth_port</literal>, 和
              <literal>auth_protocol</literal> 选项，因为
              <literal>identity_uri</literal> 选项代替了他们.</para>
          </note>
        </step>
        <step>
          <para>在 <literal>[service_credentials]</literal>
            部分, 配置服务证书:</para>
          <programlisting language="ini">[service_credentials]
...
os_auth_url = http://<replaceable>controller</replaceable>:5000/v2.0
os_username = ceilometer
os_tenant_name = service
os_password = <replaceable>CEILOMETER_PASS</replaceable>
os_endpoint_type = internalURL
os_region_name = RegionOne</programlisting>
          <para>用在Identity服务中用户的 <literal>ceilometer</literal>的密码替换<replaceable>CEILOMETER_PASS</replaceable> 密码。</para>
        </step>
        <step>
          <para>在<literal>[publisher]</literal> 部分, 配置telemetry secret：</para>
          <programlisting language="ini">[publisher]
...
telemetry_secret = <replaceable>TELEMETRY_SECRET</replaceable></programlisting>
          <para>用在前面步骤中产生的telemetry secret替换<replaceable>TELEMETRY_SECRET</replaceable>密码。</para>
        </step>
        <step os="opensuse;sles">
          <para>In the <literal>[collector]</literal> section, configure the
            dispatcher:</para>
          <!-- should this be 'dispatcher = database' ? -->
          <programlisting language="ini">[collector]
...
dispatcher = database</programlisting>
        </step>
        <step>
          <para>(选项) 为协助排错,
            在<literal>[DEFAULT]</literal>
            部分启动verbose日志:</para>
          <programlisting language="ini">[DEFAULT]
...
verbose = True</programlisting>
        </step>
      </substeps>
    </step>
  </procedure>
  <procedure os="debian">
    <title>安装和配置Telemetry模块组件</title>
    <step>
      <para>安装软件包:</para>
      <screen>
        <prompt>#</prompt>
        <userinput>apt-get install ceilometer-api ceilometer-collector ceilometer-agent-central \
  ceilometer-agent-notification ceilometer-alarm-evaluator ceilometer-alarm-notifier \
  python-ceilometerclient</userinput>
      </screen>
    </step>
    <step>
      <para>响应填充以下条目：
        <link linkend="debconf-dbconfig-common">database management</link>,
        <link linkend="debconf-keystone_authtoken">Identity service
        credentials</link>,
        <link linkend="debconf-api-endpoints">service endpoint
        registration</link>, and
        <link linkend="debconf-rabbitmq">message broker
        credentials</link>.</para>
    </step>
    <step>
      <para>为telemetry secret产生一个随机数：</para>
      <screen>
        <prompt>$</prompt>
        <userinput>openssl rand -hex 10</userinput>
      </screen>
    </step>
    <step>
      <para>编辑<filename>/etc/ceilometer/ceilometer.conf</filename>文件并完成以下步骤:</para>
      <substeps>
        <step>
          <para>在<literal>[publisher]</literal> 部分, 配置telemetry secret:</para>
          <programlisting language="ini">[publisher]
...
telemetry_secret = <replaceable>TELEMETRY_SECRET</replaceable></programlisting>
          <para>用上一步生成的telemetry secret 替换 <replaceable>TELEMETRY_SECRET</replaceable>。</para>
        </step>
        <step>
          <para>在<literal>[service_credentials]</literal>
            部分, 配置服务证书：</para>
          <programlisting language="ini">[service_credentials]
...
os_auth_url = http://<replaceable>controller</replaceable>:5000/v2.0
os_username = ceilometer
os_tenant_name = service
os_password = <replaceable>CEILOMETER_PASS</replaceable></programlisting>
          <para>用你的Identity服务的用户的<literal>ceilometer</literal>密码替换<replaceable>CEILOMETER_PASS</replaceable>密码。</para>
        </step>
      </substeps>
    </step>
  </procedure>
  <procedure>
    <title>完成安装</title>
    <step os="ubuntu;debian">
      <para>重启Telemetry服务:</para>
      <screen>
        <prompt>#</prompt>
        <userinput>service ceilometer-agent-central restart</userinput>
        <prompt>#</prompt>
        <userinput>service ceilometer-agent-notification restart</userinput>
        <prompt>#</prompt>
        <userinput>service ceilometer-api restart</userinput>
        <prompt>#</prompt>
        <userinput>service ceilometer-collector restart</userinput>
        <prompt>#</prompt>
        <userinput>service ceilometer-alarm-evaluator restart</userinput>
        <prompt>#</prompt>
        <userinput>service ceilometer-alarm-notifier restart</userinput>
      </screen>
    </step>
    <step os="rhel;centos;fedora;sles;opensuse">
      <para>启动Telemetry服务并配置为开机自动启动：</para>
      <screen>
        <prompt>#</prompt>
        <userinput>systemctl enable openstack-ceilometer-api.service openstack-ceilometer-notification.service \
  openstack-ceilometer-central.service openstack-ceilometer-collector.service \
  openstack-ceilometer-alarm-evaluator.service openstack-ceilometer-alarm-notifier.service</userinput>
        <prompt>#</prompt>
        <userinput>systemctl start openstack-ceilometer-api.service openstack-ceilometer-notification.service \
  openstack-ceilometer-central.service openstack-ceilometer-collector.service \
  openstack-ceilometer-alarm-evaluator.service openstack-ceilometer-alarm-notifier.service</userinput>
      </screen>
    </step>
  </procedure>
</section>