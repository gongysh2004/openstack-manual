<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="ceilometer-nova">
  <?dbhtml stop-chunking?>
  <title>配置计算服务</title>
  <para>Telemetry uses a combination of notifications and an agent to
    collect Compute metrics. Perform these steps on each compute node.</para>
  <procedure>
    <title>To install and configure the agent</title>
    <step>
      <para>Install the packages:</para>
      <screen os="ubuntu;debian"><prompt>#</prompt> <userinput>apt-get install ceilometer-agent-compute</userinput></screen>
      <screen os="rhel;centos;fedora"><prompt>#</prompt> <userinput>yum install openstack-ceilometer-compute python-ceilometerclient python-pecan</userinput></screen>
      <screen os="opensuse;sles"><prompt>#</prompt> <userinput>zypper install openstack-ceilometer-agent-compute</userinput></screen>
    </step>
    <step>
      <para>Edit the <filename>/etc/ceilometer/ceilometer.conf</filename>
        file and complete the following actions:</para>
      <substeps>
        <step>
          <para>In the <literal>[publisher]</literal> section, configure the
            telemetry secret:</para>
          <programlisting language="ini">[publisher]
...
telemetry_secret = <replaceable>TELEMETRY_SECRET</replaceable></programlisting>
          <para>Replace <replaceable>TELEMETRY_SECRET</replaceable> with
          the telemetry secret you chose for the Telemetry module.</para>
        </step>
        <step os="centos;fedora;opensuse;rhel;sles;ubuntu">
          <para>In the <literal>[DEFAULT]</literal> and
            <literal>[oslo_messaging_rabbit]</literal> sections, configure
            <application>RabbitMQ</application> message queue access:</para>
          <programlisting language="ini">[DEFAULT]
...
rpc_backend = rabbit

[oslo_messaging_rabbit]
...
rabbit_host = <replaceable>controller</replaceable>
rabbit_userid = openstack
rabbit_password = <replaceable>RABBIT_PASS</replaceable></programlisting>
          <para>Replace <replaceable>RABBIT_PASS</replaceable> with the
            password you chose for the <literal>openstack</literal> account in
            <application>RabbitMQ</application>.</para>
        </step>
        <step>
          <para>In the <literal>[keystone_authtoken]</literal> section,
            configure Identity service access:</para>
          <programlisting language="ini">[keystone_authtoken]
...
auth_uri = http://<replaceable>controller</replaceable>:5000/v2.0
identity_uri = http://<replaceable>controller</replaceable>:35357
admin_tenant_name = service
admin_user = ceilometer
admin_password = <replaceable>CEILOMETER_PASS</replaceable></programlisting>
          <para>Replace <replaceable>CEILOMETER_PASS</replaceable> with the
            password you chose for the Telemetry module database.</para>
          <note>
            <para>Comment out any <literal>auth_host</literal>,
              <literal>auth_port</literal>, and
              <literal>auth_protocol</literal> options because the
              <literal>identity_uri</literal> option replaces them.</para>
          </note>
        </step>
        <step>
          <para>In the <literal>[service_credentials]</literal> section,
            configure service credentials:</para>
          <programlisting language="ini">[service_credentials]
...
os_auth_url = http://<replaceable>controller</replaceable>:5000/v2.0
os_username = ceilometer
os_tenant_name = service
os_password = <replaceable>CEILOMETER_PASS</replaceable>
os_endpoint_type = internalURL
os_region_name = RegionOne</programlisting>
          <para>Replace <replaceable>CEILOMETER_PASS</replaceable> with the
            password you chose for the <literal>ceilometer</literal> user in
            the Identity service.</para>
        </step>
        <step>
          <para>(Optional) To assist with troubleshooting,
            enable verbose logging in the <literal>[DEFAULT]</literal>
            section:</para>
          <programlisting language="ini">[DEFAULT]
...
verbose = True</programlisting>
        </step>
      </substeps>
    </step>
  </procedure>
  <procedure>
    <title>To configure notifications</title>
    <para>Configure the Compute service to send notifications to the
      message bus.</para>
    <step>
      <para>Edit the <filename>/etc/nova/nova.conf</filename> file and
        configure notifications in the <literal>[DEFAULT]</literal>
        section:</para>
      <programlisting language="ini">[DEFAULT]
...
instance_usage_audit = True
instance_usage_audit_period = hour
notify_on_state_change = vm_and_task_state
notification_driver = messagingv2</programlisting>
    </step>
  </procedure>
  <procedure>
    <title>To finalize installation</title>
    <step os="ubuntu;debian">
      <para>Restart the agent:</para>
      <screen><prompt>#</prompt> <userinput>service ceilometer-agent-compute restart</userinput></screen>
    </step>
    <step os="rhel;centos;fedora;sles;opensuse">
      <para>Start the Telemetry agent and configure it to start when the
        system boots:</para>
      <screen><prompt>#</prompt> <userinput>systemctl enable openstack-ceilometer-compute.service</userinput>
<prompt>#</prompt> <userinput>systemctl start openstack-ceilometer-compute.service</userinput></screen>
    </step>
    <step>
      <para>Restart the Compute service:</para>
      <screen os="ubuntu;debian"><prompt>#</prompt> <userinput>service nova-compute restart</userinput></screen>
      <screen os="rhel;centos;fedora;opensuse;sles"><prompt>#</prompt> <userinput>systemctl restart openstack-nova-compute.service</userinput></screen>
    </step>
  </procedure>
</section>
