<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="neutron-network-node">
  <title>控制节点安装和配置三层网络服务</title>
  <para>三层网络服务主要处理虚拟网络中的外部/内部路由和DHCP服务。</para>
  <procedure>
    <title>配置前提条件</title>
    <para>安装OpenStack网络服务之前，你需要配置内核的网络参数。</para>
    <step>
      <para>编辑文件<filename>/etc/sysctl.conf</filename> 添加以下参数:</para>
      <programlisting>net.ipv4.ip_forward=1
net.ipv4.conf.all.rp_filter=0
net.ipv4.conf.default.rp_filter=0</programlisting>
    </step>
    <step>
      <para>让变更生效:</para>
      <screen><prompt>#</prompt> <userinput>sysctl -p</userinput></screen>
    </step>
  </procedure>
  <procedure os="ubuntu;rhel;centos;fedora;sles;opensuse">
    <title>安装网络组件</title>
    <step>
      <screen os="ubuntu"><prompt>#</prompt> <userinput>apt-get install neutron-plugin-ml2 neutron-plugin-openvswitch-agent
  neutron-l3-agent neutron-dhcp-agent neutron-metadata-agent</userinput></screen>
      <screen os="rhel;centos;fedora"><prompt>#</prompt> <userinput>yum install openstack-neutron openstack-neutron-ml2 openstack-neutron-openvswitch</userinput></screen>
      <screen os="sles;opensuse"><prompt>#</prompt> <userinput>zypper install --no-recommends openstack-neutron-openvswitch-agent openstack-neutron-l3-agent \
  openstack-neutron-dhcp-agent openstack-neutron-metadata-agent ipset</userinput></screen>
      <note os="sles;opensuse">
	<para>SUSE没有使用ML2创建</para>
      </note>
    </step>
  </procedure>
  <procedure os="debian">
    <title>安装和配置网络组件</title>
    <step>
      <screen><prompt>#</prompt> <userinput>apt-get install neutron-plugin-openvswitch-agent openvswitch-datapath-dkms \
  neutron-l3-agent neutron-dhcp-agent neutron-metadata-agent</userinput></screen>
      <note>
	<para>Debian没有使用ML2插件</para>
      </note>
    </step>
    <step>
      <para>提示符会出现
        <link linkend="debconf-dbconfig-common">database management</link>,
        <link linkend="debconf-keystone_authtoken">Identity service
        credentials</link>,
        <link linkend="debconf-api-endpoints">service endpoint
        registration</link>, 和
        <link linkend="debconf-rabbitmq">message queue
        credentials</link>.</para>
    </step>
    <step>
       <para>选择ML2插件:</para>
       <informalfigure>
        <mediaobject>
          <imageobject>
            <imagedata scale="50"
              fileref="figures/debconf-screenshots/neutron_1_plugin_selection.png"
            />
          </imageobject>
        </mediaobject>
      </informalfigure>
      <note>
	<para>还需要更改文件<filename>/etc/neutron/neutron.conf</filename>中的
          <option>service_plugins</option>和<option>allow_overlapping_ips</option>选项。</para>
      </note>
    </step>
  </procedure>

  <procedure os="ubuntu;rhel;centos;fedora;sles;opensuse">
    <title>配置L3</title>
    <para> <glossterm>Layer-3 (L3) agenat</glossterm> 主要提供虚拟网络的路由服务。</para>
    <step>
      <para>编辑文件 <filename>/etc/neutron/l3_agent.ini</filename>:</para>
      <substeps>
        <step>
          <para>在 <literal>[DEFAULT]</literal> 部分, 配置接口驱动，外部网桥，
	    启用废旧router namespace自动删除:</para>
          <programlisting language="ini">[DEFAULT]
...
interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver
external_network_bridge =
router_delete_namespaces = True</programlisting>
          <note>
            <para> <literal>external_network_bridge</literal> 选项故意缺少值，
	      这样在一个L3上就可以启用多个外部网络。</para>
          </note>
        </step>
        <step>
	  <para>(可选) 在<literal>[DEFAULT]</literal>部分配置日志详情:</para>
          <programlisting language="ini">[DEFAULT]
...
verbose = True</programlisting>
        </step>
      </substeps>
    </step>
  </procedure>
  <procedure>
    <title>配置DHCP</title>
    <para>The <glossterm>DHCP agent</glossterm> 虚拟网络的DHCP功能。</para>
    <step os="ubuntu;rhel;centos;fedora;sles;opensuse">
      <para>编辑文件
       <filename>/etc/neutron/dhcp_agent.ini</filename>:</para>
      <substeps>
        <step>
          <para>在 <literal>[DEFAULT]</literal> 部分, 配置接口和DHCP驱动，启用
	    废旧DHCP namespace自动删除:</para>
          <programlisting language="ini">[DEFAULT]
...
interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver
dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq
dhcp_delete_namespaces = True</programlisting>
        </step>
        <step>
	  <para>(可选) 在<literal>[DEFAULT]</literal>部分配置日志详情:</para>
          <programlisting language="ini">[DEFAULT]
...
verbose = True</programlisting>
        </step>
      </substeps>
    </step>
    <step>
      <para>像GRE这样的隧道协议会包含额外的数据包头，这样负载的空间就减小了。我们需要提高物理网络的PMTU或者减少云主机的MTU。
        本手册使用DHCP通知云主机调整MTU。</para>
      <note>
        <para>一些云主机镜像不支持DHCP MTU 选项。</para>
      </note>
      <substeps>
        <step>
          <para>编辑文件 <filename>/etc/neutron/dhcp_agent.ini</filename>:</para>
          <substeps>
            <step>
              <para>在 <literal>[DEFAULT]</literal> 部分, 启用
                <glossterm>dnsmasq</glossterm> 配置文件:</para>
              <programlisting language="ini">[DEFAULT]
...
dnsmasq_config_file = /etc/neutron/dnsmasq-neutron.conf</programlisting>
            </step>
          </substeps>
        </step>
        <step>
          <para>创建和编辑文件
            <filename>/etc/neutron/dnsmasq-neutron.conf</filename>:</para>
          <substeps>
            <step>
              <para>启用DHCP MTU选项(26)，把它配置成1454字节:</para>
              <programlisting language="ini">dhcp-option-force=26,1454</programlisting>
            </step>
          </substeps>
        </step>
        <step>
          <para>杀掉
            <systemitem role="process">dnsmasq</systemitem> 进程:</para>
            <screen><prompt>#</prompt> <userinput>pkill dnsmasq</userinput></screen>
        </step>
      </substeps>
    </step>
  </procedure>
  <procedure>
    <title>配置metadata</title>
    <para><glossterm baseform="Metadata agent">metadata agent</glossterm>
      用来配置云主机的信息，比如主机名和密码。</para>
    <step>
      <para>编辑文件 <filename>/etc/neutron/metadata_agent.ini</filename>:</para>
      <substeps>
        <step>
          <para>在<literal>[DEFAULT]</literal> 部分, 配置访问权限:</para>
          <programlisting language="ini">[DEFAULT]
...
auth_uri = http://<replaceable>controller</replaceable>:5000
auth_url = http://<replaceable>controller</replaceable>:35357
auth_region = RegionOne
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
username = neutron
password = <replaceable>NEUTRON_PASS</replaceable></programlisting>
          <para>把 <replaceable>NEUTRON_PASS</replaceable> 替换成合适的密码。</para>
        </step>
        <step>
          <para>在 <literal>[DEFAULT]</literal> 部分, 配置metadata主机IP地址:</para>
          <programlisting language="ini">[DEFAULT]
...
nova_metadata_ip = <replaceable>controller</replaceable></programlisting>
        </step>
        <step>
          <para>在 <literal>[DEFAULT]</literal> 部分, 配置metadata代理共享密码:</para>
          <programlisting language="ini">[DEFAULT]
...
metadata_proxy_shared_secret = <replaceable>METADATA_SECRET</replaceable></programlisting>
          <para>把 <replaceable>METADATA_SECRET</replaceable> 替换成合适的密码。</para>
        </step>
        <step>
	  <para>(可选) 在<literal>[DEFAULT]</literal>部分配置日志详情:</para>
          <programlisting language="ini">[DEFAULT]
...
verbose = True</programlisting>
        </step>
      </substeps>
    </step>
    <step>
      <para>在 <emphasis>控制</emphasis> 节点上, 编辑文件
        <filename>/etc/nova/nova.conf</filename>:</para>
      <substeps>
        <step>
          <para>在 <literal>[neutron]</literal> 部分, 启动metadata代理并且配置密码:</para>
          <programlisting language="ini">[neutron]
...
service_metadata_proxy = True
metadata_proxy_shared_secret = <replaceable>METADATA_SECRET</replaceable></programlisting>
          <para>把 <replaceable>METADATA_SECRET</replaceable> 替换成合适的密码。</para>
        </step>
      </substeps>
    </step>
    <step>
      <para>在 <emphasis>控制</emphasis> 节点上, 重启计算
         <glossterm>API</glossterm> 服务:</para>
      <screen os="rhel;centos;fedora;sles;opensuse"><prompt>#</prompt> <userinput>systemctl restart openstack-nova-api.service</userinput></screen>
      <screen os="ubuntu;debian"><prompt>#</prompt> <userinput>service nova-api restart</userinput></screen>
    </step>
  </procedure>
  <procedure>
    <title>配置 Open vSwitch (OVS) 服务</title>
    <para>OVS服务为云主机提供了底层的虚拟网络。内部网桥<literal>br-int</literal>
      处理云主机之间的网络流量，外部网桥<literal>br-ex</literal>处理云主机到外部网络
      的流量，外部网桥需要有一个物理的端口，虚拟机通过这个端口来访问外网。事实上，
      这个端口连接了虚拟和物理网络。</para>
    <step os="rhel;centos;fedora;sles;opensuse">
      <para>启动OVS 服务并且设置为开机自启动:</para>
      <screen><prompt>#</prompt> <userinput>systemctl enable openvswitch.service</userinput>
<prompt>#</prompt> <userinput>systemctl start openvswitch.service</userinput></screen>
    </step>
    <step os="debian;ubuntu">
      <para>重启 OVS 服务:</para>
      <screen><prompt>#</prompt> <userinput>service openvswitch-switch restart</userinput></screen>
    </step>
    <step>
      <para>添加外部网桥:</para>
      <screen><prompt>#</prompt> <userinput>ovs-vsctl add-br br-ex</userinput></screen>
    </step>
    <step>
      <para>在外部网桥中添加一个端口:</para>
      <para>把 <replaceable>INTERFACE_NAME</replaceable> 替换成真实的网卡接口，比如<emphasis>eth2</emphasis>，
	或者<emphasis>ens256</emphasis>。</para>
      <screen><prompt>#</prompt> <userinput>ovs-vsctl add-port br-ex <replaceable>INTERFACE_NAME</replaceable></userinput></screen>
      <note>
        <para>根据网络接口驱动，你可以禁用<glossterm>generic receive offload(GRO)</glossterm>
	  这样外部网络和云主机之间可以达到合适的网络吞吐。</para>
        <para>测试的时候可以暂时禁用外部网络接口的GRO:</para>
        <screen><prompt>#</prompt> <userinput>ethtool -K <replaceable>INTERFACE_NAME</replaceable> gro off</userinput></screen>
      </note>
    </step>
  </procedure>
  <procedure>
    <title>完成安装</title>
    <step os="rhel;centos;fedora">
      <para>网络服务初始化脚本会创建链接文件<filename>/etc/neutron/plugin.ini</filename>
        指向ML2插件的配置文件<filename>/etc/neutron/plugins/ml2/ml2_conf.ini</filename>。
        如果连接文件不存在，使用下面命令来创建:</para>
      <screen><prompt>#</prompt> <userinput>ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini</userinput></screen>
      <para>因为包的bug，Open vSwitch初始化脚本会去找Open vSwitch插件配置，
	而不是链接文件<filename>/etc/neutron/plugin.ini</filename>，使用
	以下命令来解决这个问题:</para>
      <screen><prompt>#</prompt> <userinput>cp /usr/lib/systemd/system/neutron-openvswitch-agent.service \
  /usr/lib/systemd/system/neutron-openvswitch-agent.service.orig</userinput>
<prompt>#</prompt> <userinput>sed -i 's,plugins/openvswitch/ovs_neutron_plugin.ini,plugin.ini,g' \
  /usr/lib/systemd/system/neutron-openvswitch-agent.service</userinput></screen>
    </step>
    <step os="sles;opensuse">
      <para>网络服务初始化脚本会参考文件ML2插件配置文件来修改文件<filename>/etc/sysconfig/neutron</filename>
        中的<literal>NEUTRON_PLUGIN_CONF</literal>配置。编辑<filename>/etc/sysconfig/neutron</filename>，增加
        以下行:</para>
      <programlisting>NEUTRON_PLUGIN_CONF="/etc/neutron/plugins/ml2/ml2_conf.ini"</programlisting>
    </step>
    <step os="rhel;centos;fedora;sles;opensuse">
      <para>启动网络服务，并且配置开机自启动:</para>
      <screen><prompt>#</prompt> <userinput>systemctl enable neutron-openvswitch-agent.service neutron-l3-agent.service \
  neutron-dhcp-agent.service neutron-metadata-agent.service \
  neutron-ovs-cleanup.service</userinput>
<prompt>#</prompt> <userinput>systemctl start neutron-openvswitch-agent.service neutron-l3-agent.service \
  neutron-dhcp-agent.service neutron-metadata-agent.service</userinput></screen>
      <note>
        <para>不需要运行
          <systemitem class="service">neutron-ovs-cleanup</systemitem>
          服务</para>
      </note>
    </step>
    <step os="ubuntu;debian">
      <para>重启网络服务:</para>
      <screen><prompt>#</prompt> <userinput>service neutron-plugin-openvswitch-agent restart</userinput>
<prompt>#</prompt> <userinput>service neutron-l3-agent restart</userinput>
<prompt>#</prompt> <userinput>service neutron-dhcp-agent restart</userinput>
<prompt>#</prompt> <userinput>service neutron-metadata-agent restart</userinput></screen>
    </step>
  </procedure>
  <procedure>
    <title>验证操作</title>
    <note>
      <para>在控制节点上执行以下命令</para>
    </note>
    <step>
      <para>导入 <literal>admin</literal> 认证:</para>
      <screen><prompt>$</prompt> <userinput>source admin-openrc.sh</userinput></screen>
    </step>
    <step>
      <para>列出客户端来验证neutron客户端正常启动:</para>
      <screen><prompt>$</prompt> <userinput>neutron agent-list</userinput>
<computeroutput>+--------------------------------------+--------------------+---------+-------+----------------+---------------------------+
| id                                   | agent_type         | host    | alive | admin_state_up | binary                    |
+--------------------------------------+--------------------+---------+-------+----------------+---------------------------+
| 30275801-e17a-41e4-8f53-9db63544f689 | Metadata agent     | network | :-)   | True           | neutron-metadata-agent    |
| 4bd8c50e-7bad-4f3b-955d-67658a491a15 | Open vSwitch agent | network | :-)   | True           | neutron-openvswitch-agent |
| 756e5bba-b70f-4715-b80e-e37f59803d20 | L3 agent           | network | :-)   | True           | neutron-l3-agent          |
| 9c45473c-6d6d-4f94-8df1-ebd0b6838d5f | DHCP agent         | network | :-)   | True           | neutron-dhcp-agent        |
+--------------------------------------+--------------------+---------+-------+----------------+---------------------------+</computeroutput></screen>
    </step>
  </procedure>
</section>
