<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="swift-finalize-installation">
  <title>配置策略</title>
  <procedure>
    <title>配置哈希(hashes)和默认存储策略</title>
    <note>
      <para>
          默认的配置文件用于通用的软件分发需求， 你需要添加一个额外的配置文件而不是在原有的文件中进行编辑， 并且一些无需配置的配置项应该保留成默认配置。</para>
    </note>
    <step os="ubuntu;debian;rhel;centos;fedora">
      <para>从swift的代码仓库中获取 <filename>/etc/swift/swift.conf</filename> 文件:</para>
      <screen><prompt>#</prompt> <userinput>curl -o /etc/swift/swift.conf \
  https://git.openstack.org/cgit/openstack/swift/plain/etc/swift.conf-sample?h=stable/kilo</userinput></screen>
    </step>
    <step>
      <para>编辑 <filename>/etc/swift/swift.conf</filename> 文件并执行如下操作:</para>
      <substeps>
        <step>
          <para>在 <literal>[swift-hash]</literal> 配置组中, 配置路径的前缀和后缀.</para>
          <programlisting language="ini">[swift-hash]
...
swift_hash_path_suffix = <replaceable>HASH_PATH_PREFIX</replaceable>
swift_hash_path_prefix = <replaceable>HASH_PATH_SUFFIX</replaceable></programlisting>
          <para>将 <replaceable>HASH_PATH_PREFIX</replaceable> 和
            <replaceable>HASH_PATH_SUFFIX</replaceable> 替换成一个相互不重复的hash字符串.</para>
          <warning>
            <para>保管好这两个值， 不要公开给别人也不要修改这两个配置项的值。 </para>
          </warning>
        </step>
        <step>
          <para>在 <literal>[storage-policy:0]</literal> 配置组中,
            配置默认的存储策略:</para>
          <programlisting language="ini">[storage-policy:0]
...
name = Policy-0
default = yes</programlisting>
        </step>
      </substeps>
    </step>
    <step>
      <para>将 <filename>swift.conf</filename> 文件拷贝到每个存储节点以及proxy节点的 <literal>/etc/swift</literal> 目录中.</para>
    </step>
    <step>
      <para>将所有swift的节点的配置文件目录的owner设置为swift:</para>
      <screen><prompt>#</prompt> <userinput>chown -R swift:swift /etc/swift</userinput></screen>
    </step>
    <step os="ubuntu;debian">
      <para>在控制节点（包含运行swift proxy的节点）上重启proxy服务及依赖的相关服务:</para>
      <screen><prompt>#</prompt> <userinput>service memcached restart</userinput>
<prompt>#</prompt> <userinput>service swift-proxy restart</userinput></screen>
    </step>
    <step os="rhel;centos;fedora;sles;opensuse">
      <para>On the controller node and any other nodes running the proxy
        service, start the Object Storage proxy service including its
        dependencies and configure them to start when the system boots:</para>
      <screen><prompt>#</prompt> <userinput>systemctl enable openstack-swift-proxy.service memcached.service</userinput>
<prompt>#</prompt> <userinput>systemctl start openstack-swift-proxy.service memcached.service</userinput></screen>
    </step>
    <step os="ubuntu;debian">
      <para>在每个存储节点上启动对象存储相关的服务:</para>
      <screen><prompt>#</prompt> <userinput>swift-init all start</userinput></screen>
      <note>
        <para>存储节点运行了多个对象存储相关的服务， 我们可以使用<command>swift-init</command>命令来简化服务的启动和重启。 当使用这个命令的时候，如果没有运行存储服务的节点可能会报错， 我们可以忽略这些错误。 </para>
      </note>
    </step>
    <step os="rhel;centos;fedora;opensuse;sles">
      <para>On the storage nodes, start the Object Storage services and
        configure them to start when the system boots:</para>
      <screen><prompt>#</prompt> <userinput>systemctl enable openstack-swift-account.service openstack-swift-account-auditor.service \
  openstack-swift-account-reaper.service openstack-swift-account-replicator.service</userinput>
<prompt>#</prompt> <userinput>systemctl start openstack-swift-account.service openstack-swift-account-auditor.service \
  openstack-swift-account-reaper.service openstack-swift-account-replicator.service</userinput>
<prompt>#</prompt> <userinput>systemctl enable openstack-swift-container.service openstack-swift-container-auditor.service \
  openstack-swift-container-replicator.service openstack-swift-container-updater.service</userinput>
<prompt>#</prompt> <userinput>systemctl start openstack-swift-container.service openstack-swift-container-auditor.service \
  openstack-swift-container-replicator.service openstack-swift-container-updater.service</userinput>
<prompt>#</prompt> <userinput>systemctl enable openstack-swift-object.service openstack-swift-object-auditor.service \
  openstack-swift-object-replicator.service openstack-swift-object-updater.service</userinput>
<prompt>#</prompt> <userinput>systemctl start openstack-swift-object.service openstack-swift-object-auditor.service \
  openstack-swift-object-replicator.service openstack-swift-object-updater.service</userinput></screen>
    </step>
  </procedure>
</section>
