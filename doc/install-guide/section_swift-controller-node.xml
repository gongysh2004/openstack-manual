<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="swift-install-controller-node">
  <title>安装和配置</title>
  <para>本章节讲述了如何安装和配置proxy service来处理来自客户端对account, container和object等运行在存储节点上的服务的访问。我们将通过本章节来学习在OpenStack控制节点上安装和配置proxy service， 不过在真实的场景中， 我们可以将proxy service运行在其他的节点上， 我们通常也会在多个存储节点上部署proxy service来做冗余。 更多资料， 参考
    <link xlink:href="http://docs.openstack.org/developer/swift/deployment_guide.html"
    >Deployment Guide</link>.</para>
  <procedure>
    <title>配置proxy service的前置条件</title>
    <para>proxy service会转发用户的身份认证请求和授权请求到Identity Service, 不过， 和其他的组件不同， swift可以独立于OpenStack的其他组件来运行， 我们可以单独部署一个仅有swift的存储集群， 但是在这次的课程中， 我们还是引入了OpenStack Identity Service - Keystone, 所以我们必须在Keystone中创建相关的Service和Endpoint。</para>
    <note>
      <para>对象存储服务无需SQL数据库的支持， 我们仅需要用到一个轻量级的数据库 SQLite。</para>
    </note>
    <step>
      <para>执行如下步骤来创建身份认证所需要的身份凭据:</para>
      <substeps>
        <step>
          <para>创建 <literal>swift</literal> 用户:</para>
          <screen><prompt>$</prompt> <userinput>openstack user create --password-prompt swift</userinput>
<computeroutput>User Password:
Repeat User Password:
+----------+----------------------------------+
| Field    | Value                            |
+----------+----------------------------------+
| email    | None                             |
| enabled  | True                             |
| id       | d535e5cbd2b74ac7bfb97db9cced3ed6 |
| name     | swift                            |
| username | swift                            |
+----------+----------------------------------+</computeroutput></screen>
        </step>
        <step>
          <para>将<literal>swift</literal>用户添加到<literal>admin</literal> role中:</para>
          <screen><prompt>$</prompt> <userinput>openstack role add --project service --user swift admin</userinput>
<computeroutput>+-------+----------------------------------+
| Field | Value                            |
+-------+----------------------------------+
| id    | cd2cb9a39e874ea69e5d4b896eb16128 |
| name  | admin                            |
+-------+----------------------------------+</computeroutput></screen>
        </step>
        <step>
          <para>添加 <literal>swift</literal> service:</para>
          <screen><prompt>$</prompt> <userinput>openstack service create --type object-store \
  --description "OpenStack Object Storage" swift</userinput>
<computeroutput>+-------------+----------------------------------+
| Field       | Value                            |
+-------------+----------------------------------+
| description | OpenStack Object Storage         |
| enabled     | True                             |
| id          | 75ef509da2c340499d454ae96a2c5c34 |
| name        | swift                            |
| type        | object-store                     |
+-------------+----------------------------------+</computeroutput></screen>
        </step>
      </substeps>
    </step>
    <step>
      <para>添加对象存储服务的Endpoint:</para>
      <screen><prompt>$</prompt> <userinput>openstack endpoint create \
  --publicurl 'http://<replaceable>controller</replaceable>:8080/v1/AUTH_%(tenant_id)s' \
  --internalurl 'http://<replaceable>controller</replaceable>:8080/v1/AUTH_%(tenant_id)s' \
  --adminurl http://<replaceable>controller</replaceable>:8080 \
  --region RegionOne \
  object-store</userinput>
<computeroutput>+--------------+----------------------------------------------+
| Field        | Value                                        |
+--------------+----------------------------------------------+
| adminurl     | http://controller:8080/                      |
| id           | af534fb8b7ff40a6acf725437c586ebe             |
| internalurl  | http://controller:8080/v1/AUTH_%(tenant_id)s |
| publicurl    | http://controller:8080/v1/AUTH_%(tenant_id)s |
| region       | RegionOne                                    |
| service_id   | 75ef509da2c340499d454ae96a2c5c34             |
| service_name | swift                                        |
| service_type | object-store                                 |
+--------------+----------------------------------------------+</computeroutput></screen>
    </step>
  </procedure>
  <procedure>
    <title>安装和配置控制节点的组件</title>
    <note>
       <para>默认的配置文件用于通用的软件分发需求， 你需要添加一个额外的配置文件而不是在原有的文件中进行编辑， 并且一些无需配置的配置项应该保留成默认配置。</para>
    </note>
    <step>
      <para>安装软件包:</para>
      <note>
        <para>如果已经配置了OpenStack的运行环境， 系统可能已经包含了这些组件。</para>
      </note>
      <screen os="ubuntu;debian"><prompt>#</prompt> <userinput>apt-get install swift swift-proxy python-swiftclient python-keystoneclient \
  python-keystonemiddleware memcached</userinput></screen>
      <screen os="rhel;centos;fedora"><prompt>#</prompt> <userinput>yum install openstack-swift-proxy python-swiftclient python-keystone-auth-token \
  python-keystonemiddleware memcached</userinput></screen>
      <screen os="sles;opensuse"><prompt>#</prompt> <userinput>zypper install openstack-swift-proxy python-swiftclient python-keystoneclient \
  python-keystonemiddleware python-xml memcached</userinput></screen>
    </step>
    <step os="ubuntu;debian">
      <para>Create the <literal>/etc/swift</literal> directory.</para>
    </step>
    <step os="ubuntu;debian;rhel;centos;fedora">
      <para>从swift代码仓库获取proxy service的实例配置文件:</para>
      <screen><prompt>#</prompt> <userinput>curl -o /etc/swift/proxy-server.conf \
  https://git.openstack.org/cgit/openstack/swift/plain/etc/proxy-server.conf-sample?h=stable/kilo</userinput></screen>
    </step>
    <step>
      <para>编辑 <filename>/etc/swift/proxy-server.conf</filename>
        文件并执行如下操作:</para>
      <substeps>
        <step>
          <para>在 <literal>[DEFAULT]</literal> 配置组中,配置bind IP Address, bind port, user和配置目录:</para>
          <programlisting language="ini">[DEFAULT]
...
bind_port = 8080
user = swift
swift_dir = /etc/swift</programlisting>
        </step>
        <step>
          <para>在 <literal>[pipeline:main]</literal> 配置组中, 开启依赖的模块:</para>
          <programlisting language="ini">[pipeline:main]
pipeline = catch_errors gatekeeper healthcheck proxy-logging cache container_sync bulk ratelimit authtoken keystoneauth container-quotas account-quotas slo dlo proxy-logging proxy-server</programlisting>
          <note>
            <para>更多功能模块信息， 参考
             <link xlink:href="http://docs.openstack.org/developer/swift/deployment_guide.html"
             >Deployment Guide</link>.</para>
          </note>
        </step>
        <step>
          <para>在 <literal>[app:proxy-server]</literal> 配置组中, 开启账号自动创建:</para>
          <programlisting language="ini">[app:proxy-server]
...
account_autocreate = true</programlisting>
        </step>
        <step>
          <para>在 <literal>[filter:keystoneauth]</literal> 配置组中,配置swift操作者所需要的role:</para>
          <programlisting language="ini">[filter:keystoneauth]
use = egg:swift#keystoneauth
...
operator_roles = admin,_member_</programlisting>
        </step>
        <step>
          <para>在 <literal>[filter:authtoken]</literal> 配置组中,配置使用keystone作为Identity Service:</para>
          <programlisting language="ini">[filter:authtoken]
paste.filter_factory = keystonemiddleware.auth_token:filter_factory
...
auth_uri = http://<replaceable>controller</replaceable>:5000
auth_url = http://<replaceable>controller</replaceable>:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = service
username = swift
password = <replaceable>SWIFT_PASS</replaceable>
delay_auth_decision = true</programlisting>
          <para>将 <replaceable>SWIFT_PASS</replaceable> 替换成之前创建的 <literal>swift</literal> 用户的密码。</para>
          <note>
            <para>注释掉或者删除<literal>[filter:authtoken]</literal>中的其他的选项。</para>
          </note>
        </step>
        <step>
          <para>在 <literal>[filter:cache]</literal> 配置组中, 配置 <application>memcached</application>:</para>
          <programlisting language="ini">[filter:cache]
...
memcache_servers = 127.0.0.1:11211</programlisting>
        </step>
      </substeps>
    </step>
  </procedure>
</section>
