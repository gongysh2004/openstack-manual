<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="heat-verify">
  <title>验证</title>
  <para>这一节会描述怎么验证编排(heat)模块。</para>
  <procedure>
    <step>
      <para>导入 <literal>admin</literal> 租户认证:</para>
      <screen><prompt>$</prompt> <userinput>source admin-openrc.sh</userinput></screen>
    </step>
    <step>
      <para>编排模块使用模板来描述应用。进一步学习模板语言， 可以看<link
          xlink:href="http://docs.openstack.org/developer/heat/">Heat developer
        documentation</link> 中的 <link
          xlink:href="http://docs.openstack.org/developer/heat/template_guide/index.html"
        >the Template Guide</link> 。</para>
      <para>创建一个模板文件<filename>test-stack.yml</filename>,内容如下:</para>
      <programlisting language="yml">heat_template_version: 2014-10-16
description: A simple server.

parameters:
  ImageID:
    type: string
    description: Image use to boot a server
  NetID:
    type: string
    description: Network ID for the server

resources:
  server:
    type: OS::Nova::Server
    properties:
      image: { get_param: ImageID }
      flavor: m1.tiny
      networks:
      - network: { get_param: NetID }

outputs:
  private_ip:
    description: IP address of the server in the private network
    value: { get_attr: [ server, first_address ] }</programlisting>
    </step>
    <step>
      <para>用命令 <command>heat stack-create</command> 从模板文件创建一个堆栈:</para>
      <screen><prompt>$</prompt> <userinput>NET_ID=$(nova net-list | awk '/ demo-net / { print $2 }')</userinput>
<prompt>$</prompt> <userinput>heat stack-create -f test-stack.yml \
  -P "ImageID=cirros-0.3.3-x86_64;NetID=$NET_ID" testStack</userinput>
<computeroutput>+--------------------------------------+------------+--------------------+----------------------+
| id                                   | stack_name | stack_status       | creation_time        |
+--------------------------------------+------------+--------------------+----------------------+
| 477d96b4-d547-4069-938d-32ee990834af | testStack  | CREATE_IN_PROGRESS | 2014-04-06T15:11:01Z |
+--------------------------------------+------------+--------------------+----------------------+</computeroutput></screen>
    </step>
    <step>
      <para>用命令<command>heat stack-list</command> 验证堆栈是否创建成功:</para>
      <screen><prompt>$</prompt> <userinput>heat stack-list</userinput>
<computeroutput>+--------------------------------------+------------+-----------------+----------------------+
| id                                   | stack_name | stack_status    | creation_time        |
+--------------------------------------+------------+-----------------+----------------------+
| 477d96b4-d547-4069-938d-32ee990834af | testStack  | CREATE_COMPLETE | 2014-04-06T15:11:01Z |
+--------------------------------------+------------+-----------------+----------------------+</computeroutput></screen>
    </step>
  </procedure>
</section>
