<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="cinder-install-storage-node">
  <?dbhtml stop-chunking?>
  <title>控制节点安装和配置Cinder磁盘服务</title>
  <para>This section describes how to install and configure storage nodes
    for the Block Storage service. For simplicity, this configuration
    references one storage node with an empty local block storage device
    <literal>/dev/sdb</literal> that contains a suitable partition table with
    one partition <literal>/dev/sdb1</literal> occupying the entire device.
    The service provisions logical volumes on this device using the
    <glossterm>LVM</glossterm> driver and provides them to instances via
    <glossterm baseform="Internet Small Computer Systems Interface (iSCSI)"
    >iSCSI</glossterm> transport. You can follow these instructions with
    minor modifications to horizontally scale your environment with
    additional storage nodes.</para>
  <procedure>
    <title>To configure prerequisites</title>
    <step>
      <para>Install the LVM packages:</para>
      <screen os="ubuntu;debian"><prompt>#</prompt> <userinput>apt-get install lvm2</userinput></screen>
      <screen os="rhel;centos;fedora"><prompt>#</prompt> <userinput>yum install lvm2</userinput></screen>
       <note>
         <para>Some distributions include LVM by default.</para>
       </note>
    </step>
    <step os="rhel;centos;fedora">
      <para>Start the LVM metadata service and configure it to start when the
        system boots:</para>
      <screen><prompt>#</prompt> <userinput>systemctl enable lvm2-lvmetad.service</userinput>
<prompt>#</prompt> <userinput>systemctl start lvm2-lvmetad.service</userinput></screen>
    </step>
    <step>
      <para>Create the LVM physical volume <literal>/dev/sdb1</literal>:</para>
      <screen><prompt>#</prompt> <userinput>pvcreate /dev/sdb1</userinput>
<computeroutput>  Physical volume "/dev/sdb1" successfully created</computeroutput></screen>
      <note>
        <para>If your system uses a different device name, adjust these
          steps accordingly.</para>
      </note>
    </step>
    <step>
      <para>Create the LVM volume group
        <literal>cinder-volumes</literal>:</para>
      <screen><prompt>#</prompt> <userinput>vgcreate cinder-volumes /dev/sdb1</userinput>
<computeroutput>  Volume group "cinder-volumes" successfully created</computeroutput></screen>
      <para>The Block Storage service creates logical volumes in this
        volume group.</para>
    </step>
    <step>
      <para>Only instances can access Block Storage volumes. However, the
        underlying operating system manages the devices associated with
        the volumes. By default, the LVM volume scanning tool scans the
        <literal>/dev</literal> directory for block storage devices that
        contain volumes. If projects use LVM on their volumes, the scanning
        tool detects these volumes and attempts to cache them which can cause
        a variety of problems with both the underlying operating system
        and project volumes. You must reconfigure LVM to scan only the devices
        that contain the <literal>cinder-volume</literal> volume group. Edit
        the <filename>/etc/lvm/lvm.conf</filename> file and complete the
        following actions:</para>
      <substeps>
        <step>
          <para>In the <literal>devices</literal> section, add a filter
            that accepts the <literal>/dev/sdb</literal> device and rejects
            all other devices:</para>
          <programlisting language="ini">devices {
...
filter = [ "a/sdb/", "r/.*/"]</programlisting>
          <para>Each item in the filter array begins with <literal>a</literal>
            for <emphasis>accept</emphasis> or <literal>r</literal> for
            <emphasis>reject</emphasis> and includes a regular expression
            for the device name. The array must end with
            <literal>r/.*/</literal> to reject any remaining
            devices. You can use the <command>vgs -vvvv</command>
            command to test filters.</para>
          <warning>
            <para>If your storage nodes use LVM on the operating system disk,
              you must also add the associated device to the filter. For
              example, if the <literal>/dev/sda</literal> device contains
              the operating system:</para>
            <programlisting language="ini">filter = [ "a/sda/", "a/sdb/", "r/.*/"]</programlisting>
            <para>Similarly, if your compute nodes use LVM on the operating
              system disk, you must also modify the filter in the
              <literal>/etc/lvm/lvm.conf</literal> file on those nodes to
              include only the operating system disk. For example, if the
              <literal>/dev/sda</literal> device contains the operating
              system:</para>
            <programlisting language="ini">filter = [ "a/sda/", "r/.*/"]</programlisting>
          </warning>
        </step>
      </substeps>
    </step>
  </procedure>
  <procedure os="ubuntu;rhel;centos;fedora;sles;opensuse">
    <title>Install and configure Block Storage volume components</title>
    <step>
      <para>Install the packages:</para>
      <screen os="ubuntu"><prompt>#</prompt> <userinput>apt-get install cinder-volume python-mysqldb</userinput></screen>
      <!-- Temporary workaround for bug:
           https://bugzilla.redhat.com/show_bug.cgi?id=1212899 -->
      <screen os="rhel;centos;fedora"><prompt>#</prompt> <userinput>yum install openstack-cinder targetcli python-oslo-db python-oslo-log MySQL-python</userinput></screen>
      <screen os="sles;opensuse"><prompt>#</prompt> <userinput>zypper install openstack-cinder-volume tgt python-mysql</userinput></screen>
    </step>
    <step>
      <para>Edit the <filename>/etc/cinder/cinder.conf</filename> file
        and complete the following actions:</para>
      <substeps>
        <step>
          <para>In the <literal>[lvm]</literal> section, configure the LVM
            back end with the LVM driver, <literal>cinder-volumes</literal>
            volume group, iSCSI protocol, and appropriate iSCSI
            service:</para>
          <programlisting os="ubuntu;sles;opensuse" language="ini">[lvm]
...
volume_driver = cinder.volume.drivers.lvm.LVMVolumeDriver
volume_group = cinder-volumes
iscsi_protocol = iscsi
iscsi_helper = tgtadm</programlisting>
          <programlisting os="rhel;centos;fedora" language="ini">[lvm]
...
volume_driver = cinder.volume.drivers.lvm.LVMVolumeDriver
volume_group = cinder-volumes
iscsi_protocol = iscsi
iscsi_helper = lioadm</programlisting>
        </step>
        <step>
          <para>In the <literal>[DEFAULT]</literal> section, enable the LVM
            back end:</para>
          <programlisting language="ini">[DEFAULT]
...
enabled_backends = lvm</programlisting>
          <note>
            <para>Back-end names are arbitrary. As an example, this guide
              uses the name of the driver as the name of the back end.</para>
          </note>
        </step>
        <step>
          <para>In the <literal>[DEFAULT]</literal> section, configure the
            location of the Image service:</para>
          <programlisting language="ini">[DEFAULT]
...
glance_host = <replaceable>controller</replaceable></programlisting>
        </step>
      </substeps>
    </step>
  </procedure>
  <procedure os="debian">
    <title>Install and configure Block Storage volume components</title>
    <step>
      <para>Install the packages:</para>
      <screen><prompt>#</prompt> <userinput>apt-get install cinder-volume python-mysqldb</userinput></screen>
    </step>
    <step>
      <para>Respond to the prompts for
        <link linkend="debconf-dbconfig-common">database management</link>,
        <link linkend="debconf-keystone_authtoken">Identity service
        credentials</link>,
        <link linkend="debconf-api-endpoints">service endpoint
        registration</link>, and
        <link linkend="debconf-rabbitmq">message broker
        credentials.</link>.</para>
    </step>
    <step>
      <para>Respond to prompts for the volume group to associate with the
        Block Storage service. The script scans for volume groups and
        attempts to use the first one. If your system only contains the
        <literal>cinder-volumes</literal> volume group, the script should
        automatically choose it.</para>
    </step>
  </procedure>
  <procedure>
    <title>To finalize installation</title>
    <step os="ubuntu;debian">
      <para>Restart the Block Storage volume service including its
        dependencies:</para>
      <screen><prompt>#</prompt> <userinput>service tgt restart</userinput>
<prompt>#</prompt> <userinput>service cinder-volume restart</userinput></screen>
    </step>
    <step os="rhel;centos;fedora;sles;opensuse">
      <para>Start the Block Storage volume service including its dependencies
        and configure them to start when the system boots:</para>
      <screen os="rhel;centos;fedora"><prompt>#</prompt> <userinput>systemctl enable openstack-cinder-volume.service target.service</userinput>
<prompt>#</prompt> <userinput>systemctl start openstack-cinder-volume.service target.service</userinput></screen>
      <screen os="opensuse;sles"><prompt>#</prompt> <userinput>systemctl enable openstack-cinder-volume.service tgtd.service</userinput>
<prompt>#</prompt> <userinput>systemctl start openstack-cinder-volume.service tgtd.service</userinput></screen>
    </step>
    <step os="ubuntu">
      <para>By default, the Ubuntu packages create an SQLite database.
        Because this configuration uses a SQL database server, remove
        the SQLite database file:</para>
      <screen><prompt>#</prompt> <userinput>rm -f /var/lib/cinder/cinder.sqlite</userinput></screen>
    </step>
  </procedure>
</section>
