<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="cinder-install-storage-node">
  <?dbhtml stop-chunking?>
  <title>控制节点安装和配置Cinder磁盘服务</title>
  <para>这部分内容讲述了如何安装和配置块存储的存储节点，在本次课程中， 我们使用了一个名叫<literal>/dev/sdb</literal>的设备，并且将其全部空间分配到<literal>/dev/sdb1</literal>分区中， 块存储服务将在该设备中使用<glossterm>LVM</glossterm>来创建逻辑卷。最终它上面的卷会通过<glossterm baseform="Internet Small Computer Systems Interface (iSCSI)"
    >iSCSI</glossterm>的方式提供给虚拟机。
    </para>
  <procedure>
    <title>配置的前提条件</title>
    <step>
      <para>安装LVM相关的软件包:</para>
      <screen os="ubuntu;debian"><prompt>#</prompt> <userinput>apt-get install lvm2</userinput></screen>
      <screen os="rhel;centos;fedora"><prompt>#</prompt> <userinput>yum install lvm2</userinput></screen>
       <note>
         <para>一些Linux发行版中已经包含了LVM。</para>
       </note>
    </step>
    <step os="rhel;centos;fedora">
      <para>Start the LVM metadata service and configure it to start when the
        system boots:</para>
      <screen><prompt>#</prompt> <userinput>systemctl enable lvm2-lvmetad.service</userinput>
<prompt>#</prompt> <userinput>systemctl start lvm2-lvmetad.service</userinput></screen>
    </step>
    <step>
      <para>创建物理卷 <literal>/dev/sdb1</literal>:</para>
      <screen><prompt>#</prompt> <userinput>pvcreate /dev/sdb1</userinput>
<computeroutput>  Physical volume "/dev/sdb1" successfully created</computeroutput></screen>
      <note>
        <para>如果系统使用了不同的设备名称， 将命令中的设备名称修改成正确的名称。</para>
      </note>
    </step>
    <step>
      <para>创建卷组
        <literal>cinder-volumes</literal>:</para>
      <screen><prompt>#</prompt> <userinput>vgcreate cinder-volumes /dev/sdb1</userinput>
<computeroutput>  Volume group "cinder-volumes" successfully created</computeroutput></screen>
      <para>块存储服务将在这个卷组中创建逻辑卷。</para>
    </step>
    <step>
      <para>只有计算节点上的虚拟机实例可以访问块存储的卷，不过，块存储中的卷都是由操作系统底层来分配和管理的， LVM的扫描工具会扫描/dev/目录下的块存储设备， 如果卷使用的是LVM, 扫描工具检测到这些卷并尝试缓存它们也许会引起底层的一些问题， 你可以通过修改<filename>/etc/lvm/lvm.conf</filename>文件来规定LVM只扫描包含<literal>cinder-volume</literal>的卷组。</para>
      <substeps>
        <step>
          <para>在<literal>devices</literal> 配置组中,添加一个filter来只接受 <literal>/dev/sdb</literal> 设备并去除其他设备:</para>
          <programlisting language="ini">devices {
...
filter = [ "a/sdb/", "r/.*/"]</programlisting>
          <para>filter数组的每个项目都以一个<literal>a</literal>打头代表<emphasis>accept</emphasis> 或者 <literal>r</literal> 打头代表
            <emphasis>reject</emphasis> ， 中间包含一个正则表达式代表设备名称. 配置项必须以
            <literal>r/.*/</literal>结尾来去除所有剩余的设备。你可以使用 <command>vgs -vvvv</command>
            命令来测试filters.</para>
          <warning>
            <para>
              如果你的存储节点在系统盘上使用LVM， 你必须同样配置现有设备的filter, 例如, 如果 <literal>/dev/sda</literal>设备上包含了操作系统:</para>
            <programlisting language="ini">filter = [ "a/sda/", "a/sdb/", "r/.*/"]</programlisting>
            <para>同样， 如果你的计算节点上的系统盘上使用LVM，你同样需要修改
              <literal>/etc/lvm/lvm.conf</literal>文件中的filter。例如系统在
              <literal>/dev/sda</literal> 设备上:</para>
            <programlisting language="ini">filter = [ "a/sda/", "r/.*/"]</programlisting>
          </warning>
        </step>
      </substeps>
    </step>
  </procedure>
  <procedure os="ubuntu;rhel;centos;fedora;sles;opensuse">
    <title>安装和配置块存储卷服务(volume service)</title>
    <step>
      <para>安装软件包:</para>
      <screen os="ubuntu"><prompt>#</prompt> <userinput>apt-get install cinder-volume python-mysqldb</userinput></screen>
      <!-- Temporary workaround for bug:
           https://bugzilla.redhat.com/show_bug.cgi?id=1212899 -->
      <screen os="rhel;centos;fedora"><prompt>#</prompt> <userinput>yum install openstack-cinder targetcli python-oslo-db python-oslo-log MySQL-python</userinput></screen>
      <screen os="sles;opensuse"><prompt>#</prompt> <userinput>zypper install openstack-cinder-volume tgt python-mysql</userinput></screen>
    </step>
    <step>
      <para>编辑 <filename>/etc/cinder/cinder.conf</filename> 文件并完成以下操作:</para>
      <substeps>
        <step>
          <para>在 <literal>[lvm]</literal> 配置组中, 配置LVM作为后端的存储Driver, <literal>cinder-volumes</literal>
            volume group, iSCSI protocol, 和iSCSI相关的
            service:</para>
          <programlisting os="ubuntu;sles;opensuse" language="ini">[lvm]
...
volume_driver = cinder.volume.drivers.lvm.LVMVolumeDriver
volume_group = cinder-volumes
iscsi_protocol = iscsi
iscsi_helper = tgtadm</programlisting>
          <programlisting os="rhel;centos;fedora" language="ini">[lvm]
...
volume_driver = cinder.volume.drivers.lvm.LVMVolumeDriver
volume_group = cinder-volumes
iscsi_protocol = iscsi
iscsi_helper = lioadm</programlisting>
        </step>
        <step>
          <para>在<literal>[DEFAULT]</literal> 配置组中, 开启LVM存储后端:</para>
          <programlisting language="ini">[DEFAULT]
...
enabled_backends = lvm</programlisting>
          <note>
            <para>存储后端的名称可以任意取， 作为实例教程， 这里使用与driver相同的名称作为后端名称。</para>
          </note>
        </step>
        <step>
          <para>在<literal>[DEFAULT]</literal> 配置组中, 配置Image Service的路径:</para>
          <programlisting language="ini">[DEFAULT]
...
glance_host = <replaceable>controller</replaceable></programlisting>
        </step>
      </substeps>
    </step>
  </procedure>
  <procedure os="debian">
    <title>Install and configure Block Storage volume components</title>
    <step>
      <para>Install the packages:</para>
      <screen><prompt>#</prompt> <userinput>apt-get install cinder-volume python-mysqldb</userinput></screen>
    </step>
    <step>
      <para>Respond to the prompts for
        <link linkend="debconf-dbconfig-common">database management</link>,
        <link linkend="debconf-keystone_authtoken">Identity service
        credentials</link>,
        <link linkend="debconf-api-endpoints">service endpoint
        registration</link>, and
        <link linkend="debconf-rabbitmq">message broker
        credentials.</link>.</para>
    </step>
    <step>
      <para>Respond to prompts for the volume group to associate with the
        Block Storage service. The script scans for volume groups and
        attempts to use the first one. If your system only contains the
        <literal>cinder-volumes</literal> volume group, the script should
        automatically choose it.</para>
    </step>
  </procedure>
  <procedure>
    <title>完成安装</title>
    <step os="ubuntu;debian">
      <para>重启cinder以及其相关的服务:</para>
      <screen><prompt>#</prompt> <userinput>service tgt restart</userinput>
<prompt>#</prompt> <userinput>service cinder-volume restart</userinput></screen>
    </step>
    <step os="rhel;centos;fedora;sles;opensuse">
      <para>Start the Block Storage volume service including its dependencies
        and configure them to start when the system boots:</para>
      <screen os="rhel;centos;fedora"><prompt>#</prompt> <userinput>systemctl enable openstack-cinder-volume.service target.service</userinput>
<prompt>#</prompt> <userinput>systemctl start openstack-cinder-volume.service target.service</userinput></screen>
      <screen os="opensuse;sles"><prompt>#</prompt> <userinput>systemctl enable openstack-cinder-volume.service tgtd.service</userinput>
<prompt>#</prompt> <userinput>systemctl start openstack-cinder-volume.service tgtd.service</userinput></screen>
    </step>
    <step os="ubuntu">
      <para>默认情况下， Ubuntu的OpenStack软件包会自动创建一个SQLite数据库， 因为我们已经配置成使用MySQL作为我们的后端数据库， 所以我们可以删除这个数据库文件:</para>
      <screen><prompt>#</prompt> <userinput>rm -f /var/lib/cinder/cinder.sqlite</userinput></screen>
    </step>
  </procedure>
</section>
